
@using Backend.App.Labels
@using Backend.App.Labels.Ent
@using Backend.App.Config
@using Backend.App.Config.Ent
@using Web.Components.Utils

@inherits BasePage
@inject LabelService LabelService
@inject ConfigService ConfigService

@if (_isLoading)
{
    <Loading />
}
else
{
    @InitialiseLabel()

    <div>
        @if (_showTooltip)
        {
            <div data-tooltip="@ShowToolTip()">
                <button class="@GetClass()" @onclick="OpenDialog">@ShowLabel()</button>
            </div>
        }
        else 
        {
            <button class="@GetClass()" @onclick="OpenDialog">@ShowLabel()</button>
        }

        <LabelDialog ShowDialog="@_showModal" Title="@Key">
            <p>This is the content of the modal dialog.</p>
        </LabelDialog>

    </div>
}

@code {
    private LabelManager? labels;
    private AppConfig? config;

    [Parameter]
    public string Key { get; set; }

    private bool _showLink = false;
    private bool _showNoKey = false;
    private bool _showModal = false;
    private bool _showTooltip = false;

    protected override async Task OnInitializedAsync()
    {
        Func<Task> lambda = async () => config = await ConfigService.GetAppConfig();
        await Run(lambda);

        lambda = async () => labels = await LabelService.GetLabelManager(config.LangCode, config.OrgId);
        await Run(lambda);
    }

    private string InitialiseLabel()
    {
        _showLink = config?.IsLabelLink ?? false;
        _showNoKey = _showLink && (!labels?.IsLabel(Key) ?? false);
        _showTooltip = labels?.IsTooltip(Key) ?? false;
        return "";
    }

    private string ShowLabel()
    {
        return
            (_showNoKey ? "[" : "")
            + labels?.GetLabel(Key)
            + (_showNoKey ? "]" : "")
            ;
    }

    private string? ShowToolTip()
    {
        return labels?.GetTooltip(Key);
    }

    private string GetClass()
    {
        if (_showNoKey) return "label-nokey";
        if (_showLink) return "label-link";
        return "label";
    }

    private void OpenDialog()
    {
        _showModal = _showLink;
    }

}
