@using Backend.App.Labels
@using Backend.App.Labels.Ent

@inject LabelService LabelService

<h3>LabelXX: @ShowLabel()</h3>

@code {
    private List<Backend.App.Labels.Ent.Label>? labels;

    [Parameter]
    public string Key { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private string ShowLabel()
    {
        if (labels == null)
            return "Loading...";

        foreach (var l in labels)
        {
            if (l.Code == Key)
                return l.Description;
        }

        if (Key == "123") return "XXX123";
        return "[" + Key + "]";
    }

    protected async Task LoadAsync()
    {
        Func<Task> lambda = async () => labels = await LabelService.GetLabels();
        await Run(lambda);
    }

    public async Task Run(Func<Task> action)
    {
        try
        {
            await action();
        }
        catch (Exception x)
        {
            // exception = x;
            // _isError = true;
        }
        finally
        {
            // _isLoading = false;
        }
    }

}
